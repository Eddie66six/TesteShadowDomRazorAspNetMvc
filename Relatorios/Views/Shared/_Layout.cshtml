<div id="renderBody"></div>
<script>
    let myElement = document.getElementById('renderBody');
    let shadow = myElement.attachShadow({
        mode: 'open'
    });

    read();

    function read() {
        var xhr = new XMLHttpRequest;
        xhr.open('GET', 'https://@Context.Request.Host@Context.Request.PathBase/js/Chart.min.js');
        xhr.onload = show;
        xhr.send();
    }

    function show() {
        let scriptRef = document.createElement('script');
        scriptRef.textContent = this.response;
        shadow.appendChild(scriptRef);

        var html = document.createElement('div');
        html.innerHTML = '@RenderBody()';
        shadow.appendChild(html);

        var script = document.createElement('script');
        script.innerHTML = `
        var ctx = shadow.getElementById("myChart").getContext('2d');
        var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
        labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
        datasets: [{
        label: '# of Votes',
        data: [12, 19, 3, 5, 2, 3],
        backgroundColor: [
        'rgba(255, 99, 132, 0.2)',
        'rgba(54, 162, 235, 0.2)',
        'rgba(255, 206, 86, 0.2)',
        'rgba(75, 192, 192, 0.2)',
        'rgba(153, 102, 255, 0.2)',
        'rgba(255, 159, 64, 0.2)'
        ],
        borderColor: [
        'rgba(255,99,132,1)',
        'rgba(54, 162, 235, 1)',
        'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)',
        'rgba(153, 102, 255, 1)',
        'rgba(255, 159, 64, 1)'
        ],
        borderWidth: 1
        }]
        },
        options: {
        scales: {
        yAxes: [{
        ticks: {
        beginAtZero:true
        }
        }]
        }
        }
        });
    `;
        shadow.appendChild(script);
    }
</script>